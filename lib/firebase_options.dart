// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const projectId = String.fromEnvironment('PROJECT_ID');
  static const messagingSenderId =
      String.fromEnvironment('MESSAGING_SENDER_ID');
  static const authDomain = String.fromEnvironment('AUTH_DOMAIN');
  static const storageBucket = String.fromEnvironment('STORAGE_BUCKET');

  static const webApiKey = String.fromEnvironment('WEB_API_KEY');
  static const webAppId = String.fromEnvironment('WEB_APP_ID');
  static const measurementId = String.fromEnvironment('WEB_APP_ID');

  static const androidApiKey = String.fromEnvironment('ANDROID_API_KEY');
  static const androidAppId = String.fromEnvironment('ANDROID_APP_ID');

  static const iosApiKey = String.fromEnvironment('IOS_API_KEY');
  static const iosAppId = String.fromEnvironment('IOS_APP_ID');
  static const iosBundleId = String.fromEnvironment('IOS_BUNDLE_ID');

  static const windowsApiKey = String.fromEnvironment('WINDOWS_API_KEY');
  static const windowsAppId = String.fromEnvironment('WINDOWS_APP_ID');
  static const windowsBundleId = String.fromEnvironment('WINDOWS_BUNDLE_ID');

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: webApiKey,
    appId: webAppId,
    messagingSenderId: messagingSenderId,
    projectId: projectId,
    authDomain: authDomain,
    storageBucket: storageBucket,
    measurementId: measurementId,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: androidApiKey,
    appId: androidAppId,
    messagingSenderId: messagingSenderId,
    projectId: projectId,
    storageBucket: storageBucket,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: iosApiKey,
    appId: iosAppId,
    messagingSenderId: messagingSenderId,
    projectId: projectId,
    storageBucket: storageBucket,
    iosBundleId: iosBundleId,
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: iosApiKey,
    appId: iosAppId,
    messagingSenderId: messagingSenderId,
    projectId: projectId,
    storageBucket: storageBucket,
    iosBundleId: iosBundleId,
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: windowsApiKey,
    appId: windowsAppId,
    messagingSenderId: messagingSenderId,
    projectId: projectId,
    authDomain: authDomain,
    storageBucket: storageBucket,
    measurementId: windowsBundleId,
  );

  // Add other API keys here
  // static String get googleMapsApiKey => dotenv.env['GOOGLE_MAPS_API_KEY'] ?? '';
}
